{"version":3,"sources":["webpack://src/App.css","webpack://../streamlit/frontend/src/assets/css/fonts.scss","webpack://../streamlit/frontend/src/assets/css/vendor/rfs.scss","webpack://../streamlit/frontend/src/assets/css/reboot.scss"],"names":[],"mappings":"AAAA,cACE,eAAgB,CAChB,UAAW,CACX,WAAY,CACZ,qBAAsB,CAEtB,YAAa,CACb,qBAAsB,CACtB,WACF,CAEA,qBACE,UACF,CAEA,kBACE,qBAAsB,CACtB,WAAY,CACZ,WACF,CAEA,qBACE,eAAgB,CAChB,WAAY,CACZ,WAAe,CAEf,YAAa,CACb,6BACF,CAEA,sBACE,oBAAqB,CACrB,kBACF,CAEA,+BACE,cACF,CAEA,UACE,oBAAqB,CACrB,gBACF,CACA,gCACE,UACF,CC3BA,WACE,6BAAA,CACA,eAAA,CACA,kBAAA,CAEA,mFAKA,CAAA,WAAA,6BAEA,CAAA,eAEA,CAAA,kBAAA,CAAA,oFAMA,CAAA,WAAA,6BAGA,CAAA,eAAA,CAAA,kBAAA,CAAA,gFASA,CAAA,WAAA,6BAEA,CAAA,eAAA,CAAA,iBAAA,CAAA,kFASA,CAAA,WAAA,6BAAA,CAAA,eAAA,CAIF,iBACE,CAAA,0FAIA,CAAA,WAAA,6BAOA,CAAA,eAAA,CAAA,iBACA,CAAA,sFAGA,CAAA,WAIF,6BACE,CAAA,eACA,CAAA,kBACA,CAAA,mFAOA,CAAA,WAAA,6BACA,CAAA,eACA,CAAA,kBAEA,CAAA,oFAOA,CAAA,WACA,6BAGA,CAAA,eAAA,CAAA,kBAAA,CAAA,gFAMA,CAAA,WACA,6BAEA,CAAA,eAAA,CAAA,iBAAA,CAAA,kFAOA,CAEA,WAAA,6BAAA,CAAA,eAAA,CAAA,iBAMF,CACE,0FAIA,CAAA,WAAA,6BAIF,CAAA,eACE,CAAA,iBAAA,CAAA,sFAIA,CAAA,WAAA,8BAKA,CAAA,eAAA,CAAA,kBAEA,CAAA,oFAQF,CAAA,WACE,8BACA,CAAA,eACA,CAAA,kBAEA,CAAA,qFAKA,CAAA,WAAA,8BAEA,CAAA,eAEA,CAAA,kBAAA,CAAA,iFAMA,CAAA,WAAA,8BAGA,CAAA,eAAA,CAAA,iBAAA,CAAA,mFCtEE,CAAA,WAAA,8BAuLI,CAAA,eAAA,CAAA,iBAvLJ,CAAA,2FAAA,CAAA,WAAA,8BAuLI,CAAA,eAAA,CAAA,iBAvLJ,CAAA,uFAoLE,CAAA,KAAA,cCpNN,CAAA,GAAA,8BAOA,CAAA,yBD6MM,GAAA,iBAAA,CAAA,CAAA,GAAA,+BAAA,CAAA,yBCtQF,GAAA,iBAAA,CAgFF,CAAA,GAAA,6BAOF,CAAA,yBD+KM,GAAA,iBC9JF,CAAA,CAAA,GAAA,+BAAA,CAAA,yBAAA,GAAA,gBAAA,CAAA,CAAA,GAAA,iBACE,CAAA,GAAA,cAKN,CAAA,MDwJM,iBALI,CAAA,QAAA,gBAAA,CAAA,aAAA,aAAA,CAAA,IAAA,eAAA,CAAA,SAAA,iBAAA,CAAA,KAAA,eAAA,CAAA,IAAA,iBAAA,CAAA,oBAAA,CAAA,QAAA,aAAA,CAAA,sCAAA,iBAAA,CAAA,4GAAA,cAAA,CAAA,OAAA,cAAA","file":"main.f5c7b615.chunk.css","sourcesContent":[".editor-modal {\n  background: #ddd;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n\n  display: flex;\n  flex-direction: column;\n  padding: 4px;\n}\n\n.editor-modal-header {\n  color: #222;\n}\n\n.editor-container {\n  box-sizing: border-box;\n  flex-grow: 1;\n  cursor: initial;\n}\n\n.editor-modal-footer {\n  background: #888;\n  padding: 2px;\n  cursor: initial;\n\n  display: flex;\n  justify-content: space-between;\n}\n\n.file-selector-button {\n  display: inline-block;\n  margin-right: 0.2rem;\n}\n\n.file-selector-button:disabled {\n  cursor: default;\n}\n\n.footnote {\n  display: inline-block;\n  text-align: right;\n}\n.footnote a,.footnote a:visited {\n  color: #ddf\n}\n","/**\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* Mono, regular */\n\n@font-face {\n  font-family: \"Source Code Pro\";\n  font-weight: 400;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Code_Pro/SourceCodePro-Regular.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Code Pro\";\n  font-weight: 600;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Code_Pro/SourceCodePro-SemiBold.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Code Pro\";\n  font-weight: 700;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Code_Pro/SourceCodePro-Bold.ttf\")\n    format(\"truetype\");\n}\n\n/* Mono, italic */\n\n@font-face {\n  font-family: \"Source Code Pro\";\n  font-weight: 400;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Code_Pro/SourceCodePro-Italic.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Code Pro\";\n  font-weight: 600;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Code_Pro/SourceCodePro-SemiBoldItalic.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Code Pro\";\n  font-weight: 700;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Code_Pro/SourceCodePro-BoldItalic.ttf\")\n    format(\"truetype\");\n}\n\n/* Sans, regular */\n\n@font-face {\n  font-family: \"Source Sans Pro\";\n  font-weight: 400;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Sans_Pro/SourceSansPro-Regular.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Sans Pro\";\n  font-weight: 600;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Sans_Pro/SourceSansPro-SemiBold.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Sans Pro\";\n  font-weight: 700;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Sans_Pro/SourceSansPro-Bold.ttf\")\n    format(\"truetype\");\n}\n\n/* Sans, italic */\n\n@font-face {\n  font-family: \"Source Sans Pro\";\n  font-weight: 400;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Sans_Pro/SourceSansPro-Italic.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Sans Pro\";\n  font-weight: 600;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Sans_Pro/SourceSansPro-SemiBoldItalic.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Sans Pro\";\n  font-weight: 700;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Sans_Pro/SourceSansPro-BoldItalic.ttf\")\n    format(\"truetype\");\n}\n\n/* Serif, regular */\n\n@font-face {\n  font-family: \"Source Serif Pro\";\n  font-weight: 400;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Serif_Pro/SourceSerifPro-Regular.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Serif Pro\";\n  font-weight: 600;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Serif_Pro/SourceSerifPro-SemiBold.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Serif Pro\";\n  font-weight: 700;\n  font-style: regular;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Serif_Pro/SourceSerifPro-Bold.ttf\")\n    format(\"truetype\");\n}\n\n/* Serif, italic */\n\n@font-face {\n  font-family: \"Source Serif Pro\";\n  font-weight: 400;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Serif_Pro/SourceSerifPro-Italic.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Serif Pro\";\n  font-weight: 600;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Serif_Pro/SourceSerifPro-SemiBoldItalic.ttf\")\n    format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Source Serif Pro\";\n  font-weight: 700;\n  font-style: italic;\n  /* IMPORTANT: Always use a relative path! */\n  src: url(\"../fonts/Source_Serif_Pro/SourceSerifPro-BoldItalic.ttf\")\n    format(\"truetype\");\n}\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base value\n@use \"sass:math\";\n\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit !=\n  px and\n  $rfs-breakpoint-unit !=\n  em and\n  $rfs-breakpoint-unit !=\n  rem\n{\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: math.div($rfs-base-value, $rfs-base-value * 0 + 1);\n} @else if $rfs-base-value-unit == rem {\n  $rfs-base-value: math.div(\n    $rfs-base-value,\n    $rfs-base-value * 0 + math.div(1, $rfs-rem-value)\n  );\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: math.div($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n} @else if\n  $rfs-breakpoint-unit-cache ==\n  rem or\n  $rfs-breakpoint-unit-cache ==\n  \"em\"\n{\n  $rfs-breakpoint: math.div(\n    $rfs-breakpoint,\n    $rfs-breakpoint * 0 + math.div(1, $rfs-rem-value)\n  );\n}\n\n// Calculate the media query value\n$rfs-mq-value: if(\n  $rfs-breakpoint-unit == px,\n  #{$rfs-breakpoint}px,\n  #{math.div($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit}\n);\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if(\n  $rfs-mode == max-media-query,\n  max-height,\n  min-height\n);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    } @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  } @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  } @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  } @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    } @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val +\n          \" \" +\n          if(\n            $rfs-unit == rem,\n            #{math.div($value, $value * 0 + $rfs-rem-value)}rem,\n            $value\n          );\n      } @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val +\n          \" \" +\n          if(\n            $rfs-unit == px,\n            #{math.div($value, $value * 0 + 1) * $rfs-rem-value}px,\n            $value\n          );\n      } @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + \" \" + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values), $values);\n\n  $val: \"\";\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + \" 0\";\n    } @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + \" \" + $value;\n      } @else {\n        // Remove unit from $value for calculations\n        $value: math.div(\n          $value,\n          $value * 0 + if($unit == px, 1, math.div(1, $rfs-rem-value))\n        );\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val +\n            \" \" +\n            if(\n              $rfs-unit == rem,\n              #{math.div($value, $rfs-rem-value)}rem,\n              #{$value}px\n            );\n        } @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value +\n            math.div(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if(\n            $rfs-unit == rem,\n            #{math.div($value-min, $rfs-rem-value)}rem,\n            #{$value-min}px\n          );\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{math.div(\n              $value-diff * 100,\n              $rfs-breakpoint\n            )}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val +\n            \" calc(\" +\n            $min-width +\n            if($value < 0, \" - \", \" + \") +\n            $variable-width +\n            \")\";\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluidVal: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluidVal {\n      #{$property}: $val;\n    } @else {\n      @include _rfs-rule {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule {\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n","/**\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// stylelint-disable at-rule-no-vendor-prefix, declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefi\n@import \"variables\";\n@import \"vendor/rfs.scss\";\n\n@function valid-radius($radius) {\n  $return: ();\n  @each $value in $radius {\n    @if type-of($value) == number {\n      $return: append($return, max($value, 0));\n    } @else {\n      $return: append($return, $value);\n    }\n  }\n  @return $return;\n}\n\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: valid-radius($radius);\n  } @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n// Remaining Reboot. Most have been ported to `globalStyles.ts`\n\n// Body\nhtml {\n  @include font-size($font-size-base);\n}\n\nh1 {\n  @include font-size(2.75rem);\n}\n\nh2 {\n  @include font-size(2.25rem);\n}\n\nh3 {\n  @include font-size(1.75rem);\n}\n\nh4 {\n  @include font-size(1.5rem);\n}\n\nh5 {\n  @include font-size(1.25rem);\n}\n\nh6 {\n  @include font-size(1rem);\n}\n\n// Small\n//\n// Add the correct font size in all browsers\n\nsmall {\n  @include font-size($small-font-size);\n}\n\n// Sub and Sup\n//\n// Prevent sub and sup elements from affecting the line height in\n// all browsers.\n\nsub,\nsup {\n  @include font-size($sub-sup-font-size);\n}\n\n// Code\n\npre,\ncode,\nkbd {\n  @include font-size(1em); // Correct the odd em font sizing in all browsers.\n}\n\npre {\n  @include font-size($code-font-size);\n\n  // Account for some code outputs that place code tags in pre tags\n  code {\n    @include font-size(inherit);\n  }\n}\n\ncode {\n  @include font-size($code-font-size);\n}\n\nkbd {\n  @include font-size($kbd-font-size);\n  @include border-radius($border-radius-sm);\n\n  kbd {\n    @include font-size(1em);\n  }\n}\n\n// Forms\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  @include font-size(inherit);\n}\n\n// 1. Prevent a WebKit bug where (2) destroys native audio and video\n//    controls in Android 4.\n// 2. Opinionated: add \"hand\" cursor to non-disabled button elements.\n\nbutton,\n  [type=\"button\"], // 1\n  [type=\"reset\"],\n  [type=\"submit\"] {\n  @if $enable-button-pointers {\n    &:not(:disabled) {\n      cursor: pointer; // 2\n    }\n  }\n}\n\nlegend {\n  @include font-size($legend-font-size);\n}\n"]}